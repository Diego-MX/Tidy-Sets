quit()
quit()
quit()
lgcl <- c(T,F,F,F,T)
lgcl
as.factor(lgcl)
as.factor(lgcl, levels=c(T,V), labels=c("1approved","1rejected"))
as.factor(lgcl, levels=c(T,V), labels=c("apprvd","rjctd"))
as.factor(lgcl, levels=c(T,F), labels=c("apprvd","rjctd"))
as.factor(lgcl, levels=c("TRUE","FALSE"), labels=c("apprvd","rjctd"))
as.factor(lgcl, levels=c("TRUE","FALSE"), labels=c("approved","rejected"))
as.factor(lgcl,  labels=c("approved","rejected"))
as.factor(lgcl, levels=c("TRUE","FALSE"))
as.factor(lgcl
)
as.factor(lgcl, levels=c(TRUE, FALSE), labels=c("approved","rejected"))
as.factor(lgcl, labels=c("TRUE","FALSE"))
as.factor(lgcl, labels=c(TRUE,FALSE))
u <- c(T,T,T,F,F,T,F)
u
rm(list=ls())
library(ROCR)
summary(test)
x <- seq(2,20,2)
x
class(x)
str(x)
sample(x,5)
sample(x,5,3)
sample(x,3,5)
x <- 1:12
sample(x, replace = TRUE)
x <- 1:10
sample(x[x >  8])
sample(x[x >  9])
x[x>9]
sample(10)
sample.int(5)
sample.int(1)
sample.int(3)
sample(x)
x
sample.int(6,4)
sample(6,4)
x <- factor(c(1, 2, NA), exclude = NULL)
x
x
is.na(x)
cuse <- read.table("http://data.princeton.edu/wws509/datasets/cuse.dat",  header=TRUE)
cuse
attach(cuse)
lrfit <- glm( cbind(using, notUsing) ~
+  age + education + wantsMore , family = binomial)
lrfit
str(lrfit)
summary(lrfit)
cbind(using, notUsing)
summary(lrfit)
load("~/mycode/konfio/Projects/MLK/Machine Learning.Rproj")
debugSource('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
kdata
head(kdata, 15)
head(kdata$USR_FBK_NMBR,15)
head(kdata$USR_FBK_NMB)
kdata$USR_NMB_BAD
kdata$USR_NBRS_BAD
pvars
debugSource('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
aModel <- konfioGLM(modelOut, modelData_, variables,
family='binomial')
column
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
debugSource('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
aModel$Coefficients
aModel
aModel$coefficients
debugSource('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
debugSource('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
rm(list=ls())
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
appsData$SMB_CASH
modelData$SMB_CASH
a <- modelData$SMB_CASH
b <- quantile(a, seq(0,1,0.25), na.rm=T)
b
aNA <- any(is.na(a))
aNA
c <- cut(a, b, labels=NULL, include.lowest=T)
c
c <- cut(a, b, labels=F, include.lowest=T)
c
d <- factor(c, exclude=NULL)
D
d
debugSource('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
rm(list=ls())
debugSource('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
aModel <- konfioGLM(modelOut, modelData_, variables,
family='binomial')
kclass
klvls
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
appsData$USR_OUT_NTNL
quantiles(appsData$USR_OUT_NTNL)
quantile(appsData$USR_OUT_NTNL)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
a <- modelData$CLNT_LOANS
a
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
konfioModel$Verification
konfioModel
bestModel
aModel
aModel$Verification
aModel
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestModel
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
warnings()
}
}
scores <- konfioPredict(aModel, modelData)
scores
scores0 <- scores[!modelOut]
scores1 <- scores[!!modelOut]
length(scores0)
length(scores1)
31/2837
F0 <- ecdf(scores0)
F1 <- ecdf(scores1)
plot(F0 - F1)
plot(F0(x) - F1(x))
plot(x, F0(x) - F1(x))
plot(function(x){F0(x)-F1(x)}
)
plot(function(x){F1(x)-F0(x)}
)
plot(function(x){F1(x)-F0(x)})
U <- function(s){F1(x)-2*F0(x)}
btm <- min(scores0)
btm
scores
scores0
scores0
btm <- min(scores0, na.rm=T)
btm
top <- max(scores1, na.rm=T)
top
U
optimize(U, c(btm,top))
U(0.3)
F0(0.3)
F1(0.3)
U <- function(s){F1(s) - 2*F0(s)}
optimize(U, c(btm, tp))
optimize(U, c(btm, top))
plot(U)
plot(U)
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestRatio
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestRatio
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestModel$Verification
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestModel$Verification
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestModel$Verification
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestRatio
getwd()
setwd("../../../Quick Requests")
setwd("~/mycode/R")
setwd("../konfio/Projects/Quick Requests")
getwd()
tendatas <- read.csv("Tendatas.csv")
sapply(tendatas, class)
head(tendatas)
tendatas$fecha_ <- as.date(tendatas$fecha)
tendatas$fecha_ <- as.Date(tendatas$fecha)
head(tendatas)
tendatas$fecha_ <- as.Date(tendatas$fecha, format="%m/%d/%Y" )
head(tendatas)
tendatas$fecha <- as.Date(tendatas$fecha, format="%m/%d/%Y" )
tendatas$mes <- as.yearmon(tendatas$fecha)
tendatas$mes <- format(tendatas$fecham "%y-%b")
tendatas$mes <- format(tendatas$fecham "%y-%M")
tendatas$mes <- format(tendatas$fecham, "%y-%b")
tendatas$mes
tendatas$mes <- format(tendatas$fecham, "%y-%M")
tendatas
head(tendatas)
?yearmon
tendatas$mes <- format(tendatas$fecha, "%y-%M")
head(tendatas)
tendatas$mes <- format(tendatas$fecha, "%y-%b")
head(tendatas)
tendatas$mes <- format(tendatas$fecha, "'%y-%b")
head(tendatas)
tendatas$mes <- format(tendatas$fecha, "%b, '%y")
head(tendatas)
tendatas$mes <- format(tendatas$fecha, "%y-%b")
tendatas$mes <- format(tendatas$fecha, "%y-%m")
head(tendatas)
aggregate(tendatas, c(tickets.totales, ventas.pesos, utilidades.pesos), by=c(mes, pos))
aggregate(tendatas, c(tickets.totales, ventas.pesos, utilidades.pesos), by=c(mes, pos), FUN=SUM)
aggregate(tendatas, c(tickets.totales, ventas.pesos, utilidades.pesos), by=c(mes, pos), FUN=sum)
names(tendatas)
head(tendatas)
aggregate(cbind(ventas.pesos, utilidades.pesos, tickets.totales) ~ mes + pos, data=tendatas, FUN=sum)
ventas <- aggregate(ventas.pesos ~ mes + pos, data=tendatas, FUN=sum)
sapply(tendatas, clas)
sapply(tendatas, class)
tendatas <- read.csv("Tendatas.csv")
sapply(tendatas, class)
tendatas <- read.csv("Tendatas.csv", stringsAsFactors=F)
sapply(tendatas,class)
head(tendatas)
tendatas$fecha_ <- as.Date(tendatas$fecha, "%m/%d/%Y")
head(tendatas)
tendatas$tickets <- as.integer(tickets.totales)
tendatas$tickets <- as.integer(tendatas$tickets.totales)
tendatas$ventas <- as.numeric(tendatas$ventas.pesos)
tendatas <- read.csv("Tendatas.csv")
head(tendatas)
sapply(tendatas, class)
tendatas$fecha <- as.Date(tendatas$fechas)
tendatas$fecha <- as.Date(tendatas$fecha)
head(tendatas)
ventas <- aggregate(ventas.pesos, by=c(fecha, pos), data=tendatas, FUN=sum)
ventas <- aggregate(data=tendatas, ventas.pesos, by=c(fecha, pos), FUN=sum)
ventas <- with(tendatas, aggregate(ventas.pesos, by=c(fecha, pos), FUN=sum))
ventas <- with(tendatas, aggregate(ventas.pesos, by=list(fecha, pos), FUN=sum))
vents
ventas
head(tendatas)
tendatas$mes <- format(tendatas$fecha, "%y-%m")
ventas <- with(tendatas, aggregate(ventas.pesos, by=list(mes, pos), FUN=sum))
ventas
? melt
??melt
install.packages("reshape")
library(reshape)
mData <- melt(ventas)
mData
head(ventas)
aggregate
head(tendatas)
tendAgg <- aggregate(cbind(tickets.totales, ventas.pesos, utilidades.pesos) ~ pos + mes, data=tendatas, FUN=sum)
tendAgg
head(tendAgg)
tendMlt <- melt(tendAgg, id=c(pos, mes), )
tendMlt <- melt(tendAgg, id=c(pos, mes))
tendMlt <- melt(tendAgg, id=c("pos", "mes"))
head(tendMlt)
cast(tendMlt, pos~mes + variable)
cast(tendMlt, pos~mes)
rm(list=ls())
tendatas <- read.csv("Tendatas.csv")
head(tendatas)
sapply(tendatas, class)
ventas <- with(tendatas, aggregate(ventas.pesos,
by=list(pos, mes), FUN=sum))
tendatas <- read.csv("Tendatas.csv")
tendatas$fecha <- as.Date(tendatas$Fecha, "%m/%d/%Y")
sapply(tendatas, class)
head(tendatas)
tendatas$mes <- format(tendatas$fecha, "%Y-%m")
tendatas$fecha <- as.Date(tendatas$fecha)
tendatas$mes <- format(tendatas$fecha, "%Y-%m")
ventas <- with(tendatas, aggregate(ventas.pesos,
by=list(pos, mes), FUN=sum))
ventas
cast(ventas, pos ~ mes)
head(ventas)
cast(ventas, Group.1 ~ Group.2)
castVentas <- cast(ventas, Group.1 ~ Group.2)
castVentas
ventas
head(ventas)
?cast
ventaC <- cast(ventas, Group.1 ~ Group.2, value=x)
ventaC <- cast(ventas, Group.1 ~ Group.2, value="x")
ventaC
View(ventaC)
colnames(tendatas)
head(tendatas)
boletos <- with(tendatas, aggregate(tickets.totales,
by=list(pos, mes), FUN=sum))
boletosCst <- cast(boletos, Group.1 ~ Group.2, value='x')
View(boletosCst)
utilidad <- with(tendatas, aggregate(utilidades.pesos,
by=list(pos, mes), FUN=sum))
utilidadCst <- cast(utilidad, Group.1 ~ Group.2, value='x')
View(utilidadCst)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestRatio
bestModel
bestModel$Verification
require(graphics)
f <- function (x, a) (x - a)^2
xmin <- optimize(f, c(0, 1), tol = 0.0001, a = 1/3)
xmin
optimize(function(x) x^2*(print(x)-1), lower = 0, upper = 10)
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestRatio
bestModel$Verification
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestModel
bestModel$Verification
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
rm(list=ls())
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
bestRatio
bestModel
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestRatio
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestRatio
bestModel$Verification
rm(list=ls())
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestRatio
bestModel$Verification
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestRatio
source('~/mycode/konfio/Projects/MLK/1.0/dev/Konfio Model.R', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestRatio
bestModel$Verification
unlist(bestModel$Verification)
bestModel$Verification
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestModel$Verification
source('~/mycode/konfio/Projects/MLK/1.0/dev/callibrateScore.R', echo=TRUE)
bestModel$Variables
bestModel$Variables['USR_OUT_NOTIONAL','varParam']
bestModel$Variables['USR_OUT_NTNL','varParam']
bestModel$Variables
bestModel$Variables[, 1:2]
bestModel$Verification
bestModel$Variables
with(bestModel$Variables,
paste(varInDb, varName, sep=' AS ', collapse=', ')
)
colnames(bestModel$Variables)
with(bestModel$Variables,
+ paste(varInDB, varName, sep=' AS ', collapse=', ')
)
with(bestModel$Variables,
paste(varInDB, varName, sep=' AS', collapse=', '))
paste(varInDB, varName, sep=' AS ', collapse=', '))
with(bestModel$Variables,
paste(varInDB, varName, sep=' AS ', collapse=', '))
source('~/mycode/konfio/Projects/MLK/1.0/calculateScore.r', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/calculateScore.r', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/calculateScore.r', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/calculateScore.r', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/calculateScore.r', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/calculateScore.r', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/calculateScore.r', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/calculateScore.r', echo=TRUE)
appsData  <- konfioPrep(appsData, konfioModel$Variables)
appsData  <- konfioPrep(appsData, konfioModel$Variables)
q
appsData  <- konfioPrep(appsData, konfioModel$Variables)
appsData  <- konfioPrep(appsData, konfioModel$Variables)
debugSource('~/mycode/konfio/Projects/MLK/1.0/src/Konfio Model.R', echo=TRUE)
appsData  <- konfioPrep(appsData, konfioModel$Variables)
appsData  <- konfioPrep(appsData, konfioModel$Variables)
source('~/mycode/konfio/Projects/MLK/1.0/src/Konfio Model.R', echo=TRUE)
appsData  <- konfioPrep(appsData, konfioModel$Variables)
appsData  <- konfioPrep(appsData, konfioModel$Variables)
appsData  <- konfioPrep(appsData, konfioModel$Variables)
source('~/.active-rstudio-document', echo=TRUE)
Q
source('~/mycode/konfio/Projects/MLK/1.0/src/Konfio Model.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/calculateScore.r')
source('~/mycode/konfio/Projects/MLK/1.0/calculateScore.r', echo=TRUE)
source('~/mycode/konfio/Projects/MLK/1.0/calculateScore.r', echo=TRUE)
x <- 1:6
x[3] <- NA
x < 4
x[x<4]
x[which(x<4]
x[which(x<4)]
which(x<4)
rm(list=ls())
install.packages("dplyr")
chicago <- readRDS("chicago.rds")
library(dplyr)
chicago <- readRDS("chicago.rds")
source('~/.active-rstudio-document', echo=TRUE)
activities
features
features <- read.table("features.txt")
features
getwd()
setwd("test")
test1 <- read.table("X_test.txt")
dim(test1)
setwd("Inertial Signals")
bodytest <- read.table("body_acc_x_test.txt")
dim(bodytest)
features
dim(features)
features   <- read.table("features.txt", row.names=1,
col.names=c("row", "feature"), nrows=600)
setwd("..")
setwd("..")
features   <- read.table("features.txt", row.names=1,
col.names=c("row", "feature"), nrows=600)
features
cat("Hey how are you \n I'm fine")
readline("Are we in the working directory now
how does this work?")
readline(paste0("working directory\n", "okay whatever"))
features
u <- grep('mean', features$feature, ignore.case=T)
u
features[u]
features[u,]
View(bodytest)
